{
"snippets": {
"css": {
"filters": "html",
"snippets": {
/* font */
"ff:a": "font-family:Arial, 'Helvetica Neue', Helvetica, sans-serif;",
"ff:an": "font-family:'Arial Narrow', Arial, sans-serif;",
"ff:cg": "font-family:'Century Gothic', CenturyGothic, AppleGothic, sans-serif;",
"ff:h": "font-family:'Helvetica Neue', Helvetica, Arial, sans-serif;",
"ff:i": "font-family:Impact, Haettenschweiler, 'Franklin Gothic Bold', Charcoal, 'Helvetica Inserat', 'Bitstream Vera Sans Bold', 'Arial Black', sans serif;",
"ff:lg": "font-family:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Geneva, Verdana, sans-serif;",
"ff:su": "font-family:'Segoe UI', Frutiger, 'Frutiger Linotype', 'Dejavu Sans', 'Helvetica Neue', Arial, sans-serif;",
"ff:t": "font-family:Tahoma, Verdana, Segoe, sans-serif;",
"ff:tm": "font-family:'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Tahoma, sans-serif;",
"ff:v": "font-family:Verdana, Geneva, sans-serif;",

"ff:ba": "font-family:'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif;",
"ff:g": "font-family:Georgia, Times, 'Times New Roman', serif;",
"ff:p": "font-family:Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif;",
"ff:tn": "font-family:TimesNewRoman, 'Times New Roman', Times, Baskerville, Georgia, serif;",
"ff:tnr": "font-family:TimesNewRoman, 'Times New Roman', Times, Baskerville, Georgia, serif;",

"ff:cn": "font-family:'Courier New', Courier, 'Lucida Sans Typewriter', 'Lucida Typewriter', monospace;",
"ff:lc": "font-family:'Lucida Console', 'Lucida Sans Typewriter', Monaco, 'Bitstream Vera Sans Mono', monospace;",
/* font-stacks */
"ffc": "font: ${1:13}px/${2:14}px '${3:font}', Arial, Helvetica, sans-serif;",
"fa": "font:${1:12}px/${2:18}px ${3:Arial, 'Helvetica Neue', Helvetica, sans-serif};",
"fab": "font:bold ${1:12}px/${2:18}px ${3:Arial, 'Helvetica Neue', Helvetica, sans-serif};",
"fai": "font:italic ${1:12}px/${2:18}px ${3:Arial, 'Helvetica Neue', Helvetica, sans-serif};",
"ft": "font:${1:12}px/${2:18}px 'Times New Roman', Times, serif;",
"lh": "line-height:${1}px;${2}",
"fz": "font-size:${1}px;${2}",
"f:an": "font: ${1:12}px/${2:16}px ${3:'Arial Narrow', Arial, sans-serif};",
"f:cg": "font: ${1:12}px/${2:16}px ${3:'Century Gothic', CenturyGothic, AppleGothic, sans-serif};",
"f:h": "font: ${1:12}px/${2:16}px ${3:'Helvetica Neue', Helvetica, Arial, sans-serif};",
"f:i": "font: ${1:12}px/${2:16}px ${3:Impact, Haettenschweiler, 'Franklin Gothic Bold', Charcoal, 'Helvetica Inserat', 'Bitstream Vera Sans Bold', 'Arial Black', sans serif};",
"f:lg": "font: ${1:12}px/${2:16}px ${3:'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Geneva, Verdana, sans-serif};",
"f:su": "font: ${1:12}px/${2:16}px ${3:'Segoe UI', Frutiger, 'Frutiger Linotype', 'Dejavu Sans', 'Helvetica Neue', Arial, sans-serif};",
"fta": "font: ${1:12}px/${2:16}px ${3:Tahoma, Verdana, Segoe, sans-serif};",
"f:tm": "font: ${1:12}px/${2:16}px ${3:'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', Tahoma, sans-serif};",
"fver": "font: ${1:12}px/${2:16}px ${3:Verdana, Geneva, sans-serif};",

"f:ba": "font: ${1:12}px/${2:16}px ${3:'Book Antiqua', Palatino, 'Palatino Linotype', 'Palatino LT STD', Georgia, serif};",
"f:g": "font: ${1:12}px/${2:16}px ${3:Georgia, Times, 'Times New Roman', serif};",
"f:p": "font: ${1:12}px/${2:16}px ${3:Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif};",
"f:tn": "font: ${1:12}px/${2:16}px ${3:TimesNewRoman, 'Times New Roman', Times, Baskerville, Georgia, serif};",
"f:tnr": "font: ${1:12}px/${2:16}px ${3:TimesNewRoman, 'Times New Roman', Times, Baskerville, Georgia, serif};",


"f:cn": "font: ${1:12}px/${2:16}px ${3:'Courier New', Courier, 'Lucida Sans Typewriter', 'Lucida Typewriter', monospace};",
"f:lc": "font: ${1:12}px/${2:16}px ${3:'Lucida Console', 'Lucida Sans Typewriter', Monaco, 'Bitstream Vera Sans Mono', monospace};",

// backgrounds
"bg": "background: #${1:000};",
"bg0": "background:0;${1}",
"bgp": "background-position:${1:0 0};",
"bgc": "background-color: #${1:fff};",
"bgu": "background: url(../img/${1}) no-repeat;",
"bgs": "background: url(../img/sprite.png) no-repeat ${1};",
"bs": "background-size:${1:100%} ${2:100%};",
"bgs:a": "background-size:auto;",
"bgs:ct": "background-size:contain;",
"bgs:cv": "background-size:cover;",

// borders
"br": "border-radius: |;",
"bdc": "border-color: #${1:000};",
"bd": "border$1: ${2:1}px solid #${3:000};",
"bd+": "border: ${1:1}px solid #${2:000};",
"bd0": "border: 0;${1}",
"bdt+": "border-top: ${1:1}px solid #${2:000};",
"bdb+": "border-bottom:  ${1:1}px solid #${2:000};",
"bdl+": "border-left: ${1:1}px solid #${2:000};",
"bdr+": "border-right: ${1:1}px solid #${2:000};",
"bdcl": "border-collapse:collapse;",

// form
"int": "input[type=\"text\"]{\n\tmargin:${1:0};\n\tpadding:${2:0};\n\tfloat:${3:left};\n\twidth:${4}px;\n\tcolor:#${5};\n\tborder:${6:0};\n\tbackground:${7:0};\n}",
"tex": "textarea{\n\tmargin:${1:0};\n\tpadding:${2:0};\n\tfloat:${3:left};\n\twidth:${4}px !important;\n\theight:${5}px !important;\n\tcolor:#${6};\n\tborder:${7:0};\n\tbackground:${8:0};\n}",
"ins": "input[type=\"submit\"]{\n\tfloat:${1:left};\n\tmargin:${2:0};\n\twidth:${3}px;\n\theight:${4}px;\n\tborder:${5:0};\n\tfont-size:0;\n\tline-height:0;\n\toverflow:hidden;\n\ttext-indent:-9999px;\n\tbackground:url(../img/sprite.png) no-repeat ${6};\n}\ninput[type=\"submit\"]:hover{${7}cursor:pointer;${8}}\ninput[type=\"submit\"]::-moz-focus-inner{\n\tpadding:0;\n\tborder:0;\n}\n",
"inr": "input[type=\"radio\"]{\n\tfloat:${1:left};\n\twidth:${2}px;\n\theight:${3}px;\n\tmargin:${4:0};\n\tpadding:${5:0};\n}",
"inc": "input[type=\"checkbox\"]{\n\tfloat:${1:left};\n\twidth:${2}px;\n\theight:${3}px;\n\tmargin:${4:0};\n\tpadding:${5:0};\n}",

// unsorted
"c": "color:#${1:000};",
"imr": "max-width:100%;\nheight:auto;\nvertical-align:top;",
"bsha": "-webkit-box-shadow: ${1:hoff} ${2:voff} ${3:blur} ${4:spread} ${5:rgba(0,0,0,0.5)};\n-moz-box-shadow: $1 $2 $3 $4 $5;\nbox-shadow: $1 $2 $3 $4 $5;",
"ovh": "overflow: hidden;",
"oh": "overflow: hidden;",
"fc": "${1}:first-child{${2}}",
"logo": ".logo{\n\t${1:float:left;}\n\ttext-indent:-9999px;\n\toverflow:hidden;\n\tbackground:url(../img/${3}logo.png) no-repeat;${2}\n}\n.logo a{\n\tdisplay:block;\n\theight:100%;\n}",
"ul" : "{\n margin:0;\n padding:0;\n list-style:none;\n}",
"af": "|:after{\n\tdisplay:block;\n\tclear:both;\n\tcontent:'';\n}",
"afl": "${1}:after{\n\tcontent:'';\n\twidth:${2}px;\n\theight:${3}px;\n\tbackground:url(../img/${4:sprite.png}) no-repeat${5};\n\tposition:absolute;\n\t${6:left}:${7};\n\t${8:top}:${9};\n}",
"aft": "${1}:after{${2}}",
"bfl": "${1}:before{\n\tcontent:'';\n\twidth:${2}px;\n\theight:${3}px;\n\tbackground:url(../img/${4:sprite.png}) no-repeat${5};\n\tposition:absolute;\n\t${6:left}:${7};\n\t${8:top}:${9};\n}",
"bfr": "${1}:before{${2}}",
"bz": "-moz-box-sizing:border-box;\n-webkit-box-sizing:border-box;\nbox-sizing:border-box;",
"bs-": "box-sizing:|;",
"bs:cb": "box-sizing:content-box;",
"bs:bb": "box-sizing:border-box;",
"hide-old": "${1:display: block;}\noverflow: hidden;\nfont-size: 0;\nline-height: 0;\ntext-indent: -9999px;",
"hide": "font: 0px/0 a;\ntext-shadow: none;\ncolor: transparent;",
"op": "opacity: ${1:0.5};\nfilter: alpha(opacity=${2:50});",
"mc" : "margin: 0 auto;",
"we" : "width: 100%;\noverflow: hidden;",
"-" : "${1}{${2}}",
"w1" : "width:100%;",
"h1" : "height:100%;",
"w" : "width: ${1}px;",
"h" : "height: ${1}px;",

// text
"c": "color: #${1:000};",
"tal" : "text-align: left;",
"tar" : "text-align: right;",
"tac" : "text-align: center;",
"di" : "display: inline;",
"div" : "display: inline-block;\nvertical-align: top;",
"toc" : "text-indent: -9999px;\noverflow: hidden;\ncursor: pointer;",

// positioned
"fl": "float: left;",
"fr": "float: right;",
"fn": "float: none;",
"t": "top: |px;",
"b": "bottom: |px;",
"r": "right: |px;",
"l": "left: |px;",
"l-": "left: -9999px;",
"pr": "position: relative;",
"ps": "position: static;",
"pf": "position: fixed;",
"mp": "margin: 0 -9999px;\npadding: 0 9999px;",
"pa": "position: absolute;",
"ab" : ".box{\n\twhite-space: nowrap;\n\theight: ${1}px;\n\twidth: ${2}px;\n}\n.box span{\n\tvertical-align:${3:middle};\n\tdisplay:inline-block;\n\twhite-space:normal;\n\twidth:${4}px;\n}\n.box:after{\n\tcontent:'';\n\tdisplay:inline-block;\n\theight:100%;\n\tvertical-align:${5:middle};\n\tmargin:0 0 0 -5px;\n\twidth:1px;\n\toverflow:hidden;\n}"
}
},
"html": {
"filters": "html",
"snippets": {
"html:5": "<!doctype html>\n<html>\n<head>\n\t<meta charset=\"${charset}\">\n\t<title></title>\n</head>\n<body>\n\t${child}${2}\n</body>\n</html>",
// forms
"inr": "<input id=\"${1:radio-$}\" class=\"radio\" name=\"${2:radio}\" type=\"radio\" />\n<label for=\"${1:radio-$}\">${child}$3</label>",
"inch": "<input id=\"${1:check-$}\" class=\"checkbox\" name=\"${2:checkbox}\" type=\"checkbox\" />\n<label for=\"${1:check-$}\">${child}$3</label>",

// unsorted
"bq+": "<blockquote>\n\t<q>${child}</q>\n\t<cite>$1</cite>\n</blockquote>",
"ph": "placeholder=\"${1:placeholder-text}\"",
"form": "<form action=\"#\" class=\"${class}-form\">\n\t<fieldset>\n\t\t${child}$0\n\t</fieldset>\n</form>"

},
"abbreviations": {
// forms
"int": "<input class=\"text\" type=\"text\" value=\"$1\" />",
"inp": "<input class=\"password\" type=\"password\" />",
"ins": "<input class=\"submit\" type=\"submit\" value=\"${1:Submit}\" />",
"ina": "<textarea class=\"textarea\" rows=\"5\" cols=\"10\">${child}$1</textarea>",
"select": "<select></select>",
"option": "<option>${child}</option>",
"s": "select>option*>{opt-$}",
"l": "<label for=\"-field\">${child}</label>",

// btns
"inb": "<button type=\"button\" class=\"${1:btn-send}\"><span>${child}$2</span></button>",

// unsorted
"a": "<a href=\"#\"></a>",
// "img": "<img src=\"img/${1:img-$$.jpg}\" alt=\"\" />",
"im": "<img src=\"img/${1:img-$$.jpg}\" alt=\"${2:image description}\" />",


"logo": "strong.logo>a",
"tit": "strong.title",
"acc": "ul.accordion>li*>(a.opener>{opener})+.slide",
"nv": "ul#nav>li*>a",
"nv": "ul#nav>li*>a",
"amail": "<a href='mailto:${1}'>${1}</a>",
"tbl": "table.table>tr>td.col-$$*",
"pg": "ul.paging>(li.first>a>{first})+(li.prev>a{prev})+(li*>a>{$})+(li.next>a>{next})+(li.last>a{last})"
}
}
},

"syntaxProfiles": {
"html": "xhtml"
},
// Core preferences
"preferences": {
// Defines a symbol that should be placed between CSS property and
// value when expanding CSS abbreviations.
"css.valueSeparator":": ",

// Defines a symbol that should be placed at the end of CSS property
// when expanding CSS abbreviations.
"css.propertyEnd":";",

// Automatically generate vendor-prefixed copies of expanded CSS
// property. By default, Emmet will generate vendor-prefixed
// properties only when you put dash before abbreviation
// (e.g. <code>-bxsh</code>). With this option enabled, you donвЂ™t
// need dashes before abbreviations: Emmet will produce
// vendor-prefixed properties for you.
"css.autoInsertVendorPrefixes": false,

// Indentation before closing brace of CSS rule. Some users prefere
// indented closing brace of CSS rule for better readability.
// This preferenceвЂ™s value will be automatically inserted before
// closing brace when user adds newline in newly created CSS rule
// (e.g. when вЂњInsert formatted linebreakвЂќ action will be performed
// in CSS file). If youвЂ™re such user, you may want to write put a value
// like <code>\\n\\t</code> in this preference.
"css.closeBraceIndentation": "\n",

// The list of properties whose values вЂ‹вЂ‹must not contain units.
"css.unitlessProperties": "z-index, opacity, font-weight",

// A comma-separated list of vendor-prefixes for which values should
// be generated.
"css.gradient.prefixes" : "webkit, moz, o",

// Generate gradient definition for old Webkit implementations
"css.gradient.oldWebkit" : true,

// Do not output default direction definition in generated gradients.
"css.gradient.omitDefaultDirection" : true,

// Defines a symbol that should be placed between CSS property and
// value when expanding CSS abbreviations in Stylus dialect.
"stylus.valueSeparator": " ",

// Defines a symbol that should be placed at the end of CSS property
// when expanding CSS abbreviations in Stylus dialect.
"stylus.propertyEnd": "",

// Defines a symbol that should be placed at the end of CSS property
// when expanding CSS abbreviations in SASS dialect.
"sass.propertyEnd": "",

// Class nameвЂ™s element separator.
"bem.elementSeparator" : "__",

// Class nameвЂ™s modifier separator.
"bem.modifierSeparator": "_",

// Symbol for describing short вЂњblock-elementвЂќ notation. Class names
// prefixed with this symbol will be treated as element name for parentвЂ˜s
// block name. Each symbol instance traverses one level up in parsed
// tree for block name lookup. Empty value will disable short notation.
"bem.shortElementPrefix": "-",

// A definition of comment that should be placed <i>after</i> matched
// element when <code>comment</code> filter is applied. This definition
// is an ERB-style template passed to <code>_.template()</code>
// function (see Underscore.js docs for details). In template context,
// the following properties and functions are availabe:\n
// <ul>
// <li><code>attr(name, before, after)</code> вЂ“ a function that outputs
// specified attribute value concatenated with <code>before</code>
// and <code>after</code> strings. If attribute doesn\'t exists, the
// empty string will be returned.</li>
// <li><code>node</code> вЂ“ current node (instance of <code>AbbreviationNode</code>)</li>
// <li><code>name</code> вЂ“ name of current tag</li>
// <li><code>padding</code> вЂ“ current string padding, can be used
// for formatting</li>
// </ul>
"filter.commentAfter" : "\n<!-- /<%= attr(\"id\", \"#\") %><%= attr(\"class\", \".\") %> -->",

// A definition of comment that should be placed <i>before</i> matched
// element when <code>comment</code> filter is applied.
// For more info, read description of <code>filter.commentAfter</code>
// property.
"filter.commentBefore": "",

// A comma-separated list of attribute names that should exist in abbreviatoin
// where comment should be added. If you wish to add comment for
// every element, set this option to <code>*</code>.
"filter.commentTrigger": "id, class"
}
}